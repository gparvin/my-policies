# This policy creates a CR that provides ACS Policy customizations to the
# Stackrox Central server. Deploy this policy to the same managed cluster
# where Stackrox Central is running.
#
# Set remediationAction to "enforce" to create the CR that will configure the ACS
# policies.

apiVersion: policy.open-cluster-management.io/v1
kind: Policy
metadata:
  name: policy-acs-policies
  annotations:
    policy.open-cluster-management.io/standards: NIST 800-53
    policy.open-cluster-management.io/categories: CM Configuration Management
    policy.open-cluster-management.io/controls: CM-2 Baseline Configuration
spec:
  remediationAction: inform
  disabled: false
  policy-templates:
    - objectDefinition:
        apiVersion: policy.open-cluster-management.io/v1
        kind: ConfigurationPolicy
        metadata:
          name: policy-acs-policies
        spec:
          remediationAction: inform # will be overridden by remediationAction in parent policy
          severity: low
          namespaceSelector:
            include: ["stackrox"]
          object-templates:
            - complianceType: musthave
              objectDefinition:
                apiVersion: policy.open-cluster-management.io/v1alpha1
                kind: PolicyShepherd
                metadata:
                  name: generated-policy-list
                  namespace: stackrox
                spec:
                  createPolicyList:
                  - |
                    {"name":"Docker CIS 4.4: Ensure images are scanned and rebuilt to include security patches","description":"Images should be scanned frequently for any vulnerabilities. You should rebuild all images to include these patches and then instantiate new containers from them.","rationale":"Vulnerabilities are loopholes or bugs that can be exploited by hackers or malicious users, and security patches are updates to resolve these vulnerabilities. Image vulnerability scanning tools can be use to find vulnerabilities in images and then check for available patches to mitigate these. Patches update the system to a more recent code base which does not contain these problems, and being on a supported version of the code base is very important, as vendors do not tend to supply patches for older versions which have gone out of support. Security patches should be evaluated before applying and patching should be implemented in line with the organization's IT Security Policy. Care should be taken with the results returned by vulnerability assessment tools, as some will simply return results based on software banners, and these may not be entirely accurate.","remediation":"Images should be re-built ensuring that the latest version of the base images are used, to keep the operating system patch level at an appropriate level. Once the images have been re-built, containers should be re-started making use of the updated images.","disabled":false,"categories":["Docker CIS"],"fields":null,"lifecycleStages":["BUILD"],"whitelists":[],"exclusions":[],"scope":[],"severity":"MEDIUM_SEVERITY","enforcementActions":[],"notifiers":[],"lastUpdated":null,"SORTName":"Docker CIS 4.4: Ensure images are scanned and rebuilt to include security patches","SORTLifecycleStage":"BUILD","SORTEnforcement":false,"policyVersion":"1.1","policySections":[{"sectionName":"","policyGroups":[{"fieldName":"Fixed By","booleanOperator":"OR","negate":false,"values":[{"value":".*"}]}]}]}
                  - |
                    {"name":"Compiler Tool Execution","description":"Alert when binaries used to compile software are executed at runtime","rationale":"Use of compilation tools during runtime indicates that new software may be being introduced into containers while they are running.","remediation":"Compile all necessary application code during the image build process. Avoid packaging software build tools in container images. Use your distribution's package manager to remove compilers and other build tools from images.","disabled":false,"categories":["Package Management"],"fields":null,"lifecycleStages":["RUNTIME"],"whitelists":[],"exclusions":[],"scope":[],"severity":"LOW_SEVERITY","enforcementActions":[],"notifiers":[],"lastUpdated":null,"SORTName":"Compiler Tool Execution","SORTLifecycleStage":"RUNTIME","SORTEnforcement":false,"policyVersion":"1.1","policySections":[{"sectionName":"","policyGroups":[{"fieldName":"Process Name","booleanOperator":"OR","negate":false,"values":[{"value":"make|gcc|llc|llvm-.*"}]}]}]}
                  - |
                    {"name":"Images with no scans","description":"Alert on deployments with images that have not been scanned","rationale":"Without a scan, there will be no vulnerability information for this image","remediation":"Configure the appropriate registry and scanner integrations so that StackRox can obtain scans for your images.","disabled":true,"categories":["Vulnerability Management"],"fields":null,"lifecycleStages":["DEPLOY"],"whitelists":[],"exclusions":[],"scope":[],"severity":"MEDIUM_SEVERITY","enforcementActions":[],"notifiers":[],"lastUpdated":null,"SORTName":"Images with no scans","SORTLifecycleStage":"DEPLOY","SORTEnforcement":false,"policyVersion":"1.1","policySections":[{"sectionName":"","policyGroups":[{"fieldName":"Unscanned Image","booleanOperator":"OR","negate":false,"values":[{"value":"true"}]}]}]}
                  - |
                    {"name":"Curl in Image","description":"Alert on deployments with curl present","rationale":"Leaving download tools like curl in an image makes it easier for attackers to use compromised containers, since they can easily download software.","remediation":"Use your package manager's \"remove\", \"purge\" or \"erase\" command to remove curl from the image build for production containers. Ensure that any configuration files are also removed.","disabled":false,"categories":["Security Best Practices"],"fields":null,"lifecycleStages":["BUILD","DEPLOY"],"whitelists":[],"exclusions":[{"name":"Don't alert on StackRox collector","deployment":{"name":"collector","scope":{"cluster":"","namespace":"stackrox","label":null}},"image":null,"expiration":null},{"name":"Don't alert on StackRox central","deployment":{"name":"central","scope":{"cluster":"","namespace":"stackrox","label":null}},"image":null,"expiration":null},{"name":"Don't alert on StackRox sensor","deployment":{"name":"sensor","scope":{"cluster":"","namespace":"stackrox","label":null}},"image":null,"expiration":null},{"name":"Don't alert on StackRox admission controller","deployment":{"name":"admission-control","scope":{"cluster":"","namespace":"stackrox","label":null}},"image":null,"expiration":null}],"scope":[],"severity":"LOW_SEVERITY","enforcementActions":[],"notifiers":[],"lastUpdated":null,"SORTName":"Curl in Image","SORTLifecycleStage":"BUILD,DEPLOY","SORTEnforcement":false,"policyVersion":"1.1","policySections":[{"sectionName":"","policyGroups":[{"fieldName":"Image Component","booleanOperator":"OR","negate":false,"values":[{"value":"curl="}]}]}]}
                  - |
                    {"name":"90-Day Image Age","description":"Alert on deployments with images that haven't been updated in 90 days","rationale":"Base images are updated frequently with bug fixes and vulnerability patches. Image age exceeding 90 days may indicate a higher risk of vulnerabilities existing in the image.","remediation":"Rebuild your image, push a new minor version (with a new immutable tag), and update your service to use it.","disabled":false,"categories":["DevOps Best Practices","Security Best Practices"],"fields":null,"lifecycleStages":["BUILD","DEPLOY"],"whitelists":[],"exclusions":[{"name":"Don't alert on kube-system namespace","deployment":{"name":"","scope":{"cluster":"","namespace":"kube-system","label":null}},"image":null,"expiration":null},{"name":"Don't alert on istio-system namespace","deployment":{"name":"","scope":{"cluster":"","namespace":"istio-system","label":null}},"image":null,"expiration":null}],"scope":[],"severity":"LOW_SEVERITY","enforcementActions":[],"notifiers":[],"lastUpdated":null,"SORTName":"90-Day Image Age","SORTLifecycleStage":"BUILD,DEPLOY","SORTEnforcement":false,"policyVersion":"1.1","policySections":[{"sectionName":"","policyGroups":[{"fieldName":"Image Age","booleanOperator":"OR","negate":false,"values":[{"value":"90"}]}]}]}
                  - |
                    {"name":"Latest tag","description":"Alert on deployments with images using tag 'latest'","rationale":"Using latest tag can result in running heterogeneous versions of code. Many Docker hosts cache the Docker images, which means newer versions of the latest tag will not be picked up. See https://docs.docker.com/develop/dev-best-practices for more best practices.","remediation":"Consider moving to semantic versioning based on code releases (semver.org) or using the first 12 characters of the source control SHA. This will allow you to tie the Docker image to the code.","disabled":false,"categories":["DevOps Best Practices"],"fields":null,"lifecycleStages":["BUILD","DEPLOY"],"whitelists":[],"exclusions":[{"name":"Don't alert on kube-system namespace","deployment":{"name":"","scope":{"cluster":"","namespace":"kube-system","label":null}},"image":null,"expiration":null},{"name":"Don't alert on istio-system namespace","deployment":{"name":"","scope":{"cluster":"","namespace":"istio-system","label":null}},"image":null,"expiration":null}],"scope":[],"severity":"LOW_SEVERITY","enforcementActions":[],"notifiers":[],"lastUpdated":null,"SORTName":"Latest tag","SORTLifecycleStage":"BUILD,DEPLOY","SORTEnforcement":false,"policyVersion":"1.1","policySections":[{"sectionName":"","policyGroups":[{"fieldName":"Image Tag","booleanOperator":"OR","negate":false,"values":[{"value":"latest"}]}]}]}
                  - |
                    {"name":"Docker CIS 5.19: Ensure mount propagation mode is not enabled","description":"Mount propagation mode allows mounting container volumes in Bidirectional, Host to Container, and None modes. Do not use Bidirectional mount propagation mode unless explicitly needed.","rationale":"A Bidirectional mount is replicated at all mounts and changes made at any mount point are propagated to all other mount points. Mounting a volume in Bidirectional mode does not restrict any other container from mounting and making changes to that volume. As this is likely not a desirable option from a security standpoint, this feature should not be used unless explicitly required","remediation":"Do not mount volumes in Bidirectional propagation mode.","disabled":false,"categories":["Docker CIS"],"fields":null,"lifecycleStages":["DEPLOY"],"whitelists":[],"exclusions":[{"name":"Don't alert on openshift-cluster-csi-drivers namespace","deployment":{"name":"","scope":{"cluster":"","namespace":"openshift-cluster-csi-drivers","label":null}},"image":null,"expiration":null}],"scope":[],"severity":"MEDIUM_SEVERITY","enforcementActions":[],"notifiers":[],"lastUpdated":"2021-01-19T22:26:36.455422100Z","SORTName":"Docker CIS 5.19: Ensure mount propagation mode is not enabled","SORTLifecycleStage":"DEPLOY","SORTEnforcement":false,"policyVersion":"1.1","policySections":[{"sectionName":"Section 1","policyGroups":[{"fieldName":"Mount Propagation","booleanOperator":"OR","negate":false,"values":[{"value":"BIDIRECTIONAL"}]}]}]}
                  - |
                    {"name":"Secure Shell (ssh) Port Exposed","description":"Alert on deployments exposing port 22, commonly reserved for SSH access.","rationale":"Port 22 is reserved for SSH access. SSH should not typically be used within containers.","remediation":"Ensure that non-SSH services are not using port 22. Ensure that any actual SSH servers have been vetted.","disabled":false,"categories":["Security Best Practices"],"fields":null,"lifecycleStages":["DEPLOY"],"whitelists":[],"exclusions":[],"scope":[],"severity":"HIGH_SEVERITY","enforcementActions":[],"notifiers":[],"lastUpdated":null,"SORTName":"Secure Shell (ssh) Port Exposed","SORTLifecycleStage":"DEPLOY","SORTEnforcement":false,"policyVersion":"1.1","policySections":[{"sectionName":"","policyGroups":[{"fieldName":"Exposed Port","booleanOperator":"OR","negate":false,"values":[{"value":"22"}]},{"fieldName":"Exposed Port Protocol","booleanOperator":"OR","negate":false,"values":[{"value":"tcp"}]}]}]}
                  - |
                    {"name":"Docker CIS 5.21: Ensure the default seccomp profile is not disabled","description":"Seccomp filtering provides a means to filter incoming system calls. The default seccomp profile uses an allow list to permit a large number of common system calls, and block all others.","rationale":"A large number of system calls are exposed to every userland process with many of them going unused for the entire lifetime of the process. Most of applications do not need all these system calls and would therefore benefit from having a reduced set of available system calls. Having a reduced set of system calls reduces the total kernel surface exposed to the application and thus improvises application security.","remediation":"By default, seccomp profiles are enabled. You do not need to do anything unless you want to modify and use a modified seccomp profile.","disabled":true,"categories":["Docker CIS"],"fields":null,"lifecycleStages":["DEPLOY"],"whitelists":[],"exclusions":[],"scope":[],"severity":"MEDIUM_SEVERITY","enforcementActions":[],"notifiers":[],"lastUpdated":null,"SORTName":"Docker CIS 5.21: Ensure the default seccomp profile is not disabled","SORTLifecycleStage":"DEPLOY","SORTEnforcement":false,"policyVersion":"1.1","policySections":[{"sectionName":"Section 1","policyGroups":[{"fieldName":"Seccomp Profile Type","booleanOperator":"OR","negate":false,"values":[{"value":"UNCONFINED"}]}]}]}
                  - |
                    {"name":"Docker CIS 5.15: Ensure that the host's process namespace is not shared","description":"The Process ID (PID) namespace isolates the process ID space, meaning that processes in different PID namespaces can have the same PID. This creates process level isolation between the containers and the host.","rationale":"PID namespace provides separation between processes. It prevents system processes from being visible, and allows process ids to be reused including PID 1. If the host's PID namespace is shared with containers, it would basically allow these to see all of the processes on the host system. This reduces the benefit of process level isolation between the host and the containers. Under these circumstances a malicious user who has access to a container could get access to processes on the host itself, manipulate them, and even be able to kill them. This could allow for the host itself being shut down, which could be extremely serious, particularly in a multi-tenanted environment. You should not share the host's process namespace with the containers running on it.","remediation":"You should not create a deployment with `hostPID: true`","disabled":false,"categories":["Docker CIS"],"fields":null,"lifecycleStages":["DEPLOY"],"whitelists":[],"exclusions":[],"scope":[],"severity":"MEDIUM_SEVERITY","enforcementActions":[],"notifiers":[],"lastUpdated":null,"SORTName":"Docker CIS 5.15: Ensure that the host's process namespace is not shared","SORTLifecycleStage":"DEPLOY","SORTEnforcement":false,"policyVersion":"1.1","policySections":[{"sectionName":"Section 1","policyGroups":[{"fieldName":"Host PID","booleanOperator":"OR","negate":false,"values":[{"value":"true"}]}]}]}
                  - |
                    {"name":"Docker CIS 5.16: Ensure that the host's IPC namespace is not shared","description":"IPC (POSIX/SysV IPC) namespace provides separation of named shared memory segments, semaphores and message queues. The IPC namespace on the host should therefore not be shared with containers and should remain isolated.","rationale":"The IPC namespace provides separation of IPC between the host and containers. If the host's IPC namespace is shared with the container, it would allow processes within the container to see all of IPC communications on the host system. This would remove the benefit of IPC level isolation between host and containers. An attacker with access to a container could get access to the host at this level with major consequences. The IPC namespace should therefore not be shared between the host and its containers.","remediation":"You should not create a deployment with `hostIPC: true`","disabled":false,"categories":["Docker CIS"],"fields":null,"lifecycleStages":["DEPLOY"],"whitelists":[],"exclusions":[],"scope":[],"severity":"MEDIUM_SEVERITY","enforcementActions":[],"notifiers":[],"lastUpdated":null,"SORTName":"Docker CIS 5.16: Ensure that the host's IPC namespace is not shared","SORTLifecycleStage":"DEPLOY","SORTEnforcement":false,"policyVersion":"1.1","policySections":[{"sectionName":"Section 1","policyGroups":[{"fieldName":"Host IPC","booleanOperator":"OR","negate":false,"values":[{"value":"true"}]}]}]}
                  - |
                    {"name":"Required Label: Owner/Team","description":"Alert on deployments missing the 'owner' or 'team' label","rationale":"The 'owner' or 'team' label should always be specified so that the deployment can quickly be associated with a specific user or team.","remediation":"Redeploy your service and set the 'owner' or 'team' label to yourself or your team respectively per organizational standards.","disabled":true,"categories":["DevOps Best Practices","Security Best Practices"],"fields":null,"lifecycleStages":["DEPLOY"],"whitelists":[],"exclusions":[{"name":"Don't alert on kube-system namespace","deployment":{"name":"","scope":{"cluster":"","namespace":"kube-system","label":null}},"image":null,"expiration":null},{"name":"Don't alert on istio-system namespace","deployment":{"name":"","scope":{"cluster":"","namespace":"istio-system","label":null}},"image":null,"expiration":null}],"scope":[],"severity":"LOW_SEVERITY","enforcementActions":[],"notifiers":[],"lastUpdated":null,"SORTName":"Required Label: Owner/Team","SORTLifecycleStage":"DEPLOY","SORTEnforcement":false,"policyVersion":"1.1","policySections":[{"sectionName":"","policyGroups":[{"fieldName":"Required Label","booleanOperator":"OR","negate":false,"values":[{"value":"owner|team=.+"}]}]}]}
                  - |
                    {"name":"DockerHub NGINX 1.10","description":"Alert on deployments with nginx:1.10 image from 'docker.io'","rationale":"This is an example of policy that you could create. nginx:1.10 has many vulnerabilities.","remediation":"Migrate to the latest stable release of NGINX.","disabled":false,"categories":["DevOps Best Practices","Security Best Practices"],"fields":null,"lifecycleStages":["DEPLOY"],"whitelists":[],"exclusions":[],"scope":[],"severity":"MEDIUM_SEVERITY","enforcementActions":[],"notifiers":[],"lastUpdated":null,"SORTName":"DockerHub NGINX 1.10","SORTLifecycleStage":"DEPLOY","SORTEnforcement":false,"policyVersion":"1.1","policySections":[{"sectionName":"","policyGroups":[{"fieldName":"Image Registry","booleanOperator":"OR","negate":false,"values":[{"value":"docker.io"}]},{"fieldName":"Image Remote","booleanOperator":"OR","negate":false,"values":[{"value":"r/.*nginx.*"}]},{"fieldName":"Image Tag","booleanOperator":"OR","negate":false,"values":[{"value":"1.10"}]}]}]}
                  - |
                    {"name":"Docker CIS 5.9 and 5.20: Ensure that the host's network namespace is not shared","description":"When HostNetwork is enabled the container is not placed inside a separate network stack. The container's networking is not containerized when this option is applied. The consequence of this is that the container has full access to the host's network interfaces. It also enables a shared UTS namespace. The UTS namespace provides isolation between two system identifiers: the hostname and the NIS domain name. It is used to set the hostname and the domain which are visible to running processes in that namespace. Processes running within containers do not typically require to know either the hostname or the domain name. The UTS namespace should therefore not be shared with the host.","rationale":"Selecting this option is potentially dangerous. It allows the container process to open reserved low numbered ports in the way that any other root process can. It also allows the container to access network services such as D-bus on a Docker host. A container process could potentially carry out undesired actions, such as shutting down the host. The container will also share the network namespace with the host, providing full permission for each container to change the hostname of the host. This is not in line with good security practice and should not be permitted.","remediation":"You should not create a deployment with `hostNetwork: true`","disabled":false,"categories":["Docker CIS"],"fields":null,"lifecycleStages":["DEPLOY"],"whitelists":[],"exclusions":[{"name":"Don't alert on kube-system namespace","deployment":{"name":"","scope":{"cluster":"","namespace":"kube-system","label":null}},"image":null,"expiration":null},{"name":"Don't alert on openshift-kube-apiserver namespace","deployment":{"name":"","scope":{"cluster":"","namespace":"openshift-kube-apiserver","label":null}},"image":null,"expiration":null},{"name":"Don't alert on openshift-kube-scheduler namespace","deployment":{"name":"","scope":{"cluster":"","namespace":"openshift-kube-scheduler","label":null}},"image":null,"expiration":null},{"name":"Don't alert on openshift-kube-controller-manager namespace","deployment":{"name":"","scope":{"cluster":"","namespace":"openshift-kube-controller-manager","label":null}},"image":null,"expiration":null},{"name":"Don't alert on openshift-sdn namespace","deployment":{"name":"","scope":{"cluster":"","namespace":"openshift-sdn","label":null}},"image":null,"expiration":null},{"name":"Don't alert on openshift-network-operator namespace","deployment":{"name":"","scope":{"cluster":"","namespace":"openshift-network-operator","label":null}},"image":null,"expiration":null},{"name":"Don't alert on openshift-multus namespace","deployment":{"name":"","scope":{"cluster":"","namespace":"openshift-multus","label":null}},"image":null,"expiration":null},{"name":"Don't alert on openshift-cluster-version namespace","deployment":{"name":"","scope":{"cluster":"","namespace":"openshift-cluster-version","label":null}},"image":null,"expiration":null},{"name":"Don't alert on node-ca dameonset in the openshift-image-registry namespace","deployment":{"name":"node-ca","scope":{"cluster":"","namespace":"openshift-image-registry","label":null}},"image":null,"expiration":null}],"scope":[],"severity":"MEDIUM_SEVERITY","enforcementActions":[],"notifiers":[],"lastUpdated":null,"SORTName":"Docker CIS 5.9 and 5.20: Ensure that the host's network namespace is not shared","SORTLifecycleStage":"DEPLOY","SORTEnforcement":false,"policyVersion":"1.1","policySections":[{"sectionName":"Section 1","policyGroups":[{"fieldName":"Host Network","booleanOperator":"OR","negate":false,"values":[{"value":"true"}]}]}]}
                  - |
                    {"name":"Secure Shell (ssh) Port Exposed in Image","description":"Alert on deployments exposing port 22, commonly reserved for SSH access.","rationale":"Port 22 is reserved for SSH access. SSH should not typically be used within containers.","remediation":"Ensure that non-SSH services are not using port 22. Ensure that any actual SSH servers have been vetted.","disabled":false,"categories":["Security Best Practices"],"fields":null,"lifecycleStages":["BUILD","DEPLOY"],"whitelists":[],"exclusions":[],"scope":[],"severity":"HIGH_SEVERITY","enforcementActions":[],"notifiers":[],"lastUpdated":null,"SORTName":"Secure Shell (ssh) Port Exposed in Image","SORTLifecycleStage":"BUILD,DEPLOY","SORTEnforcement":false,"policyVersion":"1.1","policySections":[{"sectionName":"","policyGroups":[{"fieldName":"Dockerfile Line","booleanOperator":"OR","negate":false,"values":[{"value":"EXPOSE=(22/tcp|\s+22/tcp)"}]}]}]}
                  - |
                    {"name":"Docker CIS 5.7: Ensure privileged ports are not mapped within containers","description":"The TCP/IP port numbers below 1024 are considered privileged ports. Normal users and processes are not allowed to use them for various security reasons. Containers are, however, allowed to map their ports to privileged ports.","rationale":"By default, if the user does not specifically declare a container port to host port mapping, the containers ports will be mapped to available non-privileged host ports. Containers are, however, allow to map their ports to a privileged ports on the host if the user explicitly declares it. In Docker this is because containers are executed with NET_BIND_SERVICE Linux kernel capability which does not restrict privileged port mapping. The privileged ports receive and transmit various pieces of data which are security sensitive and allowing containers to use them is not in line with good security practice.","remediation":"You should not map container ports to privileged host ports when starting a container. You should also, ensure that there is no such container to host privileged port mapping declarations in the Dockerfile.","disabled":false,"categories":["Docker CIS"],"fields":null,"lifecycleStages":["DEPLOY"],"whitelists":[],"exclusions":[],"scope":[],"severity":"MEDIUM_SEVERITY","enforcementActions":[],"notifiers":[],"lastUpdated":null,"SORTName":"Docker CIS 5.7: Ensure privileged ports are not mapped within containers","SORTLifecycleStage":"DEPLOY","SORTEnforcement":false,"policyVersion":"1.1","policySections":[{"sectionName":"","policyGroups":[{"fieldName":"Exposed Node Port","booleanOperator":"AND","negate":false,"values":[{"value":"\u003c= 1024"},{"value":"\u003e 0"}]}]}]}
                  - |
                    {"name":"Docker CIS 5.1 Ensure that, if applicable, an AppArmor Profile is enabled","description":"AppArmor is an effective and easy-to-use Linux application security system. It is available on some Linux distributions by default, for example, on Debian and Ubuntu.","rationale":"AppArmor protects the Linux OS and applications from various threats by enforcing a security policy which is also known as an AppArmor profile. You can create your own AppArmor profile for containers or use Docker's default profile. Enabling this feature enforces security policies on containers as defined in the profile.","remediation":"If AppArmor is applicable for your Linux OS, you should enable it.  Verify AppArmor is installed, create or import an AppArmor profile for your containers, enable enforcement of the policy, and add the appropriate AppArmor annotations to your deployment.","disabled":false,"categories":["Docker CIS"],"fields":null,"lifecycleStages":["DEPLOY"],"whitelists":[],"exclusions":[],"scope":[],"severity":"MEDIUM_SEVERITY","enforcementActions":[],"notifiers":[],"lastUpdated":null,"SORTName":"Docker CIS 5.1 Ensure that, if applicable, an AppArmor Profile is enabled","SORTLifecycleStage":"DEPLOY","SORTEnforcement":false,"policyVersion":"1.1","policySections":[{"sectionName":"Section 1","policyGroups":[{"fieldName":"AppArmor Profile","booleanOperator":"OR","negate":false,"values":[{"value":"unconfined"}]}]}]}
                  - |
                    {"name":"Ubuntu Package Manager in Image","description":"Alert on deployments with components of the Debian/Ubuntu package management system in the image.","rationale":"Package managers make it easier for attackers to use compromised containers, since they can easily add software.","remediation":"Run `dpkg -r --force-all apt apt-get \u0026\u0026 dpkg -r --force-all debconf dpkg` in the image build for production containers.","disabled":false,"categories":["Security Best Practices"],"fields":null,"lifecycleStages":["BUILD","DEPLOY"],"whitelists":[],"exclusions":[],"scope":[],"severity":"LOW_SEVERITY","enforcementActions":[],"notifiers":[],"lastUpdated":null,"SORTName":"Ubuntu Package Manager in Image","SORTLifecycleStage":"BUILD,DEPLOY","SORTEnforcement":false,"policyVersion":"1.1","policySections":[{"sectionName":"","policyGroups":[{"fieldName":"Image Component","booleanOperator":"OR","negate":false,"values":[{"value":"apt|dpkg="}]}]}]}
                  - |
                    {"name":"Process with UID 0","description":"Alert on deployments that contain processes running with UID 0","rationale":"Processes that are running with UID 0 run as the root user. This can allow for unintended privilege escalation if a container mounts host directories that are owned by the host's root user","remediation":"Specify the USER instruction in the Docker image or the runAsUser field within the Pod Security Context","disabled":true,"categories":["DevOps Best Practices","Security Best Practices"],"fields":null,"lifecycleStages":["RUNTIME"],"whitelists":[],"exclusions":[{"name":"Don't alert on kube-system namespace","deployment":{"name":"","scope":{"cluster":"","namespace":"kube-system","label":null}},"image":null,"expiration":null},{"name":"Don't alert on istio-system namespace","deployment":{"name":"","scope":{"cluster":"","namespace":"istio-system","label":null}},"image":null,"expiration":null},{"name":"Don't alert on StackRox Namespace","deployment":{"name":"","scope":{"cluster":"","namespace":"stackrox","label":null}},"image":null,"expiration":null},{"name":"Don't alert on istio-system namespace","deployment":{"name":"","scope":{"cluster":"","namespace":"istio-system","label":null}},"image":null,"expiration":null}],"scope":[],"severity":"HIGH_SEVERITY","enforcementActions":[],"notifiers":[],"lastUpdated":null,"SORTName":"Process with UID 0","SORTLifecycleStage":"RUNTIME","SORTEnforcement":false,"policyVersion":"1.1","policySections":[{"sectionName":"","policyGroups":[{"fieldName":"Process UID","booleanOperator":"OR","negate":false,"values":[{"value":"0"}]}]}]}
                  - |
                    {"name":"Wget in Image","description":"Alert on deployments with wget present","rationale":"Leaving download tools like wget in an image makes it easier for attackers to use compromised containers, since they can easily download software.","remediation":"Use your package manager's \"remove\" command to remove wget from the image build for production containers.","disabled":false,"categories":["Security Best Practices"],"fields":null,"lifecycleStages":["BUILD","DEPLOY"],"whitelists":[],"exclusions":[],"scope":[],"severity":"LOW_SEVERITY","enforcementActions":[],"notifiers":[],"lastUpdated":null,"SORTName":"Wget in Image","SORTLifecycleStage":"BUILD,DEPLOY","SORTEnforcement":false,"policyVersion":"1.1","policySections":[{"sectionName":"","policyGroups":[{"fieldName":"Image Component","booleanOperator":"OR","negate":false,"values":[{"value":"wget="}]}]}]}
                  - |
                    {"name":"No resource requests or limits specified","description":"Alert on deployments that have containers without resource requests and limits","rationale":"If a container does not have resource requests or limits specified then the host may become over-provisioned.","remediation":"Specify the requests and limits of CPU and Memory for your deployment.","disabled":false,"categories":["DevOps Best Practices","Docker CIS"],"fields":null,"lifecycleStages":["DEPLOY"],"whitelists":[],"exclusions":[{"name":"Don't alert on kube-public namespace","deployment":{"name":"","scope":{"cluster":"","namespace":"kube-public","label":null}},"image":null,"expiration":null},{"name":"Don't alert on kube-service-catalog namespace","deployment":{"name":"","scope":{"cluster":"","namespace":"kube-service-catalog","label":null}},"image":null,"expiration":null},{"name":"Don't alert on kube-system namespace","deployment":{"name":"","scope":{"cluster":"","namespace":"kube-system","label":null}},"image":null,"expiration":null},{"name":"Don't alert on istio-system namespace","deployment":{"name":"","scope":{"cluster":"","namespace":"istio-system","label":null}},"image":null,"expiration":null},{"name":"Don't alert on management-infra namespace","deployment":{"name":"","scope":{"cluster":"","namespace":"management-infra","label":null}},"image":null,"expiration":null},{"name":"Don't alert on openshift namespace","deployment":{"name":"","scope":{"cluster":"","namespace":"openshift","label":null}},"image":null,"expiration":null},{"name":"Don't alert on openshift-ansible-service-broker namespace","deployment":{"name":"","scope":{"cluster":"","namespace":"openshift-ansible-service-broker","label":null}},"image":null,"expiration":null},{"name":"Don't alert on openshift-infra namespace","deployment":{"name":"","scope":{"cluster":"","namespace":"openshift-infra","label":null}},"image":null,"expiration":null},{"name":"Don't alert on openshift-logging namespace","deployment":{"name":"","scope":{"cluster":"","namespace":"openshift-logging","label":null}},"image":null,"expiration":null},{"name":"Don't alert on openshift-node namespace","deployment":{"name":"","scope":{"cluster":"","namespace":"openshift-node","label":null}},"image":null,"expiration":null},{"name":"Don't alert on openshift-sdn namespace","deployment":{"name":"","scope":{"cluster":"","namespace":"openshift-sdn","label":null}},"image":null,"expiration":null},{"name":"Don't alert on openshift-template-service-broker namespace","deployment":{"name":"","scope":{"cluster":"","namespace":"openshift-template-service-broker","label":null}},"image":null,"expiration":null},{"name":"Don't alert on openshift-web-console namespace","deployment":{"name":"","scope":{"cluster":"","namespace":"openshift-web-console","label":null}},"image":null,"expiration":null},{"name":"Don't alert on istio-system namespace","deployment":{"name":"","scope":{"cluster":"","namespace":"istio-system","label":null}},"image":null,"expiration":null},{"name":"Don't alert on ucp-agent","deployment":{"name":"ucp-agent","scope":null},"image":null,"expiration":null},{"name":"Don't alert on ucp-agent-win","deployment":{"name":"ucp-agent-win","scope":null},"image":null,"expiration":null},{"name":"Don't alert on ucp-agent-s390x","deployment":{"name":"ucp-agent-s390x","scope":null},"image":null,"expiration":null},{"name":"Don't alert on benchmark","deployment":{"name":"benchmark","scope":null},"image":null,"expiration":null}],"scope":[],"severity":"MEDIUM_SEVERITY","enforcementActions":[],"notifiers":[],"lastUpdated":null,"SORTName":"No resource requests or limits specified","SORTLifecycleStage":"DEPLOY","SORTEnforcement":false,"policyVersion":"1.1","policySections":[{"sectionName":"","policyGroups":[{"fieldName":"Container CPU Limit","booleanOperator":"OR","negate":false,"values":[{"value":"0.000000"}]}]},{"sectionName":"","policyGroups":[{"fieldName":"Container CPU Request","booleanOperator":"OR","negate":false,"values":[{"value":"0.000000"}]}]},{"sectionName":"","policyGroups":[{"fieldName":"Container Memory Limit","booleanOperator":"OR","negate":false,"values":[{"value":"0.000000"}]}]},{"sectionName":"","policyGroups":[{"fieldName":"Container Memory Request","booleanOperator":"OR","negate":false,"values":[{"value":"0.000000"}]}]}]}
                  - |
                    {"name":"Container using read-write root filesystem","description":"Alert on deployments with containers with read-write root filesystem","rationale":"Containers running with read-write root filesystem represent greater post-exploitation risk by allowing an attacker to modify important files in the container.","remediation":"Use a read-only root filesystem, and use volume mounts to allow writes to specific sub-directories depending on your application's needs.","disabled":true,"categories":["Privileges","Docker CIS"],"fields":null,"lifecycleStages":["DEPLOY"],"whitelists":[],"exclusions":[{"name":"Don't alert on kube-system namespace","deployment":{"name":"","scope":{"cluster":"","namespace":"kube-system","label":null}},"image":null,"expiration":null},{"name":"Don't alert on istio-system namespace","deployment":{"name":"","scope":{"cluster":"","namespace":"istio-system","label":null}},"image":null,"expiration":null},{"name":"Don't alert on openshift-node namespace","deployment":{"name":"","scope":{"cluster":"","namespace":"openshift-node","label":null}},"image":null,"expiration":null},{"name":"Don't alert on openshift-sdn namespace","deployment":{"name":"","scope":{"cluster":"","namespace":"openshift-sdn","label":null}},"image":null,"expiration":null}],"scope":[],"severity":"MEDIUM_SEVERITY","enforcementActions":[],"notifiers":[],"lastUpdated":null,"SORTName":"Container using read-write root filesystem","SORTLifecycleStage":"DEPLOY","SORTEnforcement":false,"policyVersion":"1.1","policySections":[{"sectionName":"","policyGroups":[{"fieldName":"Read-Only Root Filesystem","booleanOperator":"OR","negate":false,"values":[{"value":"false"}]}]}]}
                  - |
                    {"name":"Fixable CVSS \u003e= 6 and Privileged","description":"Alert on deployments running in privileged mode with fixable vulnerabilities with a CVSS of at least 6","rationale":"Known vulnerabilities make it easier for adversaries to exploit your application, and highly privileged containers pose greater risk. You can fix these high-severity vulnerabilities by updating to a newer version of the affected component(s).","remediation":"Use your package manager to update to a fixed version in future builds, run your container with lower privileges, or speak with your security team to mitigate the vulnerabilities.","disabled":false,"categories":["Vulnerability Management","Privileges"],"fields":null,"lifecycleStages":["DEPLOY"],"whitelists":[],"exclusions":[],"scope":[],"severity":"HIGH_SEVERITY","enforcementActions":[],"notifiers":[],"lastUpdated":null,"SORTName":"Fixable CVSS \u003e= 6 and Privileged","SORTLifecycleStage":"DEPLOY","SORTEnforcement":false,"policyVersion":"1.1","policySections":[{"sectionName":"","policyGroups":[{"fieldName":"Privileged Container","booleanOperator":"OR","negate":false,"values":[{"value":"true"}]},{"fieldName":"Fixed By","booleanOperator":"OR","negate":false,"values":[{"value":".*"}]},{"fieldName":"CVSS","booleanOperator":"OR","negate":false,"values":[{"value":"\u003e= 6.000000"}]}]}]}
                  - |
                    {"name":"Docker CIS 4.7: Alert on Update Instruction","description":"Ensure update instructions are not used alone in the Dockerfile","rationale":"Adding update instructions in a single line on the Dockerfile will cause the update layer to be cached. When you then build any image later using the same instruction, this will cause the previously cached update layer to be used, potentially preventing any fresh updates from being applied to later builds.","remediation":"Use update instructions together with install instructions and version pinning for packages while installing them. This prevents caching and forces the extraction of the required versions.","disabled":false,"categories":["Docker CIS"],"fields":null,"lifecycleStages":["BUILD","DEPLOY"],"whitelists":[],"exclusions":[{"name":"Don't alert on StackRox services","deployment":{"name":"","scope":{"cluster":"","namespace":"stackrox","label":null}},"image":null,"expiration":null}],"scope":[],"severity":"LOW_SEVERITY","enforcementActions":[],"notifiers":[],"lastUpdated":null,"SORTName":"Docker CIS 4.7: Alert on Update Instruction","SORTLifecycleStage":"BUILD,DEPLOY","SORTEnforcement":false,"policyVersion":"1.1","policySections":[{"sectionName":"","policyGroups":[{"fieldName":"Dockerfile Line","booleanOperator":"OR","negate":false,"values":[{"value":"RUN=(/bin/sh -c)?\s*apk update\s*"},{"value":"RUN=(/bin/sh -c)?\s*apt update\s*"},{"value":"RUN=(/bin/sh -c)?\s*apt-get update\s*"},{"value":"RUN=(/bin/sh -c)?\s*yum update\s*"}]}]}]}
                  - |
                    {"name":"30-Day Scan Age","description":"Alert on deployments with images that haven't been scanned in 30 days","rationale":"Out-of-date scans may not identify the most recent CVEs.","remediation":"Integrate a scanner with the StackRox Kubernetes Security Platform to trigger scans automatically.","disabled":false,"categories":["Security Best Practices"],"fields":null,"lifecycleStages":["DEPLOY"],"whitelists":[],"exclusions":[],"scope":[],"severity":"MEDIUM_SEVERITY","enforcementActions":[],"notifiers":[],"lastUpdated":null,"SORTName":"30-Day Scan Age","SORTLifecycleStage":"DEPLOY","SORTEnforcement":false,"policyVersion":"1.1","policySections":[{"sectionName":"","policyGroups":[{"fieldName":"Image Scan Age","booleanOperator":"OR","negate":false,"values":[{"value":"30"}]}]}]}
                  - |
                    {"name":"Alpine Linux Package Manager (apk) in Image","description":"Alert on deployments with the Alpine Linux package manager (apk) present","rationale":"Package managers make it easier for attackers to use compromised containers, since they can easily add software.","remediation":"Run `apk --purge del apk-tools` in the image build for production containers.","disabled":false,"categories":["Security Best Practices"],"fields":null,"lifecycleStages":["BUILD","DEPLOY"],"whitelists":[],"exclusions":[],"scope":[],"severity":"LOW_SEVERITY","enforcementActions":[],"notifiers":[],"lastUpdated":null,"SORTName":"Alpine Linux Package Manager (apk) in Image","SORTLifecycleStage":"BUILD,DEPLOY","SORTEnforcement":false,"policyVersion":"1.1","policySections":[{"sectionName":"","policyGroups":[{"fieldName":"Image Component","booleanOperator":"OR","negate":false,"values":[{"value":"apk="}]}]}]}
                  - |
                    {"name":"Docker CIS 4.1: Ensure That a User for the Container Has Been Created","description":"Containers should run as a non-root user","rationale":"It is good practice to run the container as a non-root user, where possible. This can be done via the USER directive in the Dockerfile.","remediation":"Ensure that the Dockerfile for each container switches from the root user","disabled":false,"categories":["Docker CIS"],"fields":null,"lifecycleStages":["BUILD","DEPLOY"],"whitelists":[],"exclusions":[{"name":"Don't alert on StackRox namespace","deployment":{"name":"","scope":{"cluster":"","namespace":"stackrox","label":null}},"image":null,"expiration":null},{"name":"Don't alert on kube-system namespace","deployment":{"name":"","scope":{"cluster":"","namespace":"kube-system","label":null}},"image":null,"expiration":null},{"name":"Don't alert on openshift-sdn namespace","deployment":{"name":"","scope":{"cluster":"","namespace":"openshift-sdn","label":null}},"image":null,"expiration":null},{"name":"Don't alert on openshift-kube-apiserver namespace","deployment":{"name":"","scope":{"cluster":"","namespace":"openshift-kube-apiserver","label":null}},"image":null,"expiration":null},{"name":"Don't alert on openshift-etcd namespace","deployment":{"name":"","scope":{"cluster":"","namespace":"openshift-etcd","label":null}},"image":null,"expiration":null},{"name":"Don't alert on openshift-apiserver namespace","deployment":{"name":"","scope":{"cluster":"","namespace":"openshift-apiserver","label":null}},"image":null,"expiration":null},{"name":"Don't alert on openshift-dns namespace","deployment":{"name":"","scope":{"cluster":"","namespace":"openshift-dns","label":null}},"image":null,"expiration":null},{"name":"Don't alert on openshift-cluster-node-tuning-operator namespace","deployment":{"name":"","scope":{"cluster":"","namespace":"openshift-cluster-node-tuning-operator","label":null}},"image":null,"expiration":null},{"name":"Don't alert on openshift-cluster-csi-drivers namespace","deployment":{"name":"","scope":{"cluster":"","namespace":"openshift-cluster-csi-drivers","label":null}},"image":null,"expiration":null},{"name":"Don't alert on openshift-machine-config-operator namespace","deployment":{"name":"","scope":{"cluster":"","namespace":"openshift-machine-config-operator","label":null}},"image":null,"expiration":null}],"scope":[],"severity":"LOW_SEVERITY","enforcementActions":[],"notifiers":[],"lastUpdated":null,"SORTName":"Docker CIS 4.1: Ensure That a User for the Container Has Been Created","SORTLifecycleStage":"BUILD,DEPLOY","SORTEnforcement":false,"policyVersion":"1.1","policySections":[{"sectionName":"","policyGroups":[{"fieldName":"Image User","booleanOperator":"OR","negate":false,"values":[{"value":"0"},{"value":"root"}]}]}]}
                  - |
                    {"name":"ACM Privileged Container","description":"Alert on deployments with containers running in privileged mode","rationale":"Containers running as privileged represent greater post-exploitation risk by allowing an attacker to access all host devices, run a daemon in the container, etc.","remediation":"Verify that privileged capabilities are required and cannot be provided with a subset of other controls.","disabled":false,"categories":["Privileges","Docker CIS"],"fields":null,"lifecycleStages":["DEPLOY"],"whitelists":[],"exclusions":[{"name":"Don't alert on the stackrox namespace","deployment":{"name":"","scope":{"cluster":"","namespace":"stackrox","label":null}},"image":null,"expiration":null},{"name":"Don't alert on kube-system namespace","deployment":{"name":"","scope":{"cluster":"","namespace":"kube-system","label":null}},"image":null,"expiration":null},{"name":"Don't alert on istio-system namespace","deployment":{"name":"","scope":{"cluster":"","namespace":"istio-system","label":null}},"image":null,"expiration":null},{"name":"Don't alert on openshift-node namespace","deployment":{"name":"","scope":{"cluster":"","namespace":"openshift-node","label":null}},"image":null,"expiration":null},{"name":"Don't alert on openshift-sdn namespace","deployment":{"name":"","scope":{"cluster":"","namespace":"openshift-sdn","label":null}},"image":null,"expiration":null}],"scope":[],"severity":"MEDIUM_SEVERITY","enforcementActions":[],"notifiers":[],"lastUpdated":"2021-04-12T17:37:34.424687958Z","SORTName":"ACM Privileged Container","SORTLifecycleStage":"DEPLOY","SORTEnforcement":false,"policyVersion":"1.1","policySections":[{"sectionName":"","policyGroups":[{"fieldName":"Privileged Container","booleanOperator":"OR","negate":false,"values":[{"value":"true"}]}]}]}
                  - |
                    {"name":"Iptables Executed in Privileged Container","description":"Alert on privileged pods that execute iptables","rationale":"Processes that are running with UID 0 run as the root user. iptables can be used in privileged containers to modify the node's network routing.","remediation":"Specify the USER instruction in the Docker image or the runAsUser field within the Pod Security Context","disabled":false,"categories":["Network Tools","Security Best Practices"],"fields":null,"lifecycleStages":["RUNTIME"],"whitelists":[],"exclusions":[{"name":"Don't alert on Kube System Namespace","deployment":{"name":"","scope":{"cluster":"","namespace":"kube-system","label":null}},"image":null,"expiration":null},{"name":"Don't alert on istio-system namespace","deployment":{"name":"","scope":{"cluster":"","namespace":"istio-system","label":null}},"image":null,"expiration":null},{"name":"Don't alert on openshift-sdn namespace","deployment":{"name":"","scope":{"cluster":"","namespace":"openshift-sdn","label":null}},"image":null,"expiration":null}],"scope":[],"severity":"CRITICAL_SEVERITY","enforcementActions":[],"notifiers":[],"lastUpdated":null,"SORTName":"Iptables Executed in Privileged Container","SORTLifecycleStage":"RUNTIME","SORTEnforcement":false,"policyVersion":"1.1","policySections":[{"sectionName":"","policyGroups":[{"fieldName":"Privileged Container","booleanOperator":"OR","negate":false,"values":[{"value":"true"}]},{"fieldName":"Process Name","booleanOperator":"OR","negate":false,"values":[{"value":"iptables"}]},{"fieldName":"Process UID","booleanOperator":"OR","negate":false,"values":[{"value":"0"}]}]}]}
                  - |
                    {"name":"Fixable CVSS \u003e= 7","description":"Alert on deployments with fixable vulnerabilities with a CVSS of at least 7","rationale":"Known vulnerabilities make it easier for adversaries to exploit your application. You can fix these high-severity vulnerabilities by updating to a newer version of the affected component(s).","remediation":"Use your package manager to update to a fixed version in future builds or speak with your security team to mitigate the vulnerabilities.","disabled":false,"categories":["Vulnerability Management"],"fields":null,"lifecycleStages":["BUILD","DEPLOY"],"whitelists":[],"exclusions":[],"scope":[],"severity":"HIGH_SEVERITY","enforcementActions":["FAIL_BUILD_ENFORCEMENT"],"notifiers":[],"lastUpdated":null,"SORTName":"Fixable CVSS \u003e= 7","SORTLifecycleStage":"BUILD,DEPLOY","SORTEnforcement":true,"policyVersion":"1.1","policySections":[{"sectionName":"","policyGroups":[{"fieldName":"Fixed By","booleanOperator":"OR","negate":false,"values":[{"value":".*"}]},{"fieldName":"CVSS","booleanOperator":"OR","negate":false,"values":[{"value":"\u003e= 7.000000"}]}]}]}
                  - |
                    {"name":"Red Hat Package Manager in Image","description":"Alert on deployments with components of the Red Hat/Fedora/CentOS package management system.","rationale":"Package managers make it easier for attackers to use compromised containers, since they can easily add software.","remediation":"Run `rpm -e $(rpm -qa *rpm*) $(rpm -qa *dnf*) $(rpm -qa *libsolv*) $(rpm -qa *hawkey*) $(rpm -qa yum*)` in the image build for production containers.","disabled":false,"categories":["Security Best Practices"],"fields":null,"lifecycleStages":["BUILD","DEPLOY"],"whitelists":[],"exclusions":[{"name":"Don't alert on StackRox scanner","deployment":{"name":"scanner","scope":{"cluster":"","namespace":"stackrox","label":null}},"image":null,"expiration":null}],"scope":[],"severity":"LOW_SEVERITY","enforcementActions":[],"notifiers":[],"lastUpdated":null,"SORTName":"Red Hat Package Manager in Image","SORTLifecycleStage":"BUILD,DEPLOY","SORTEnforcement":false,"policyVersion":"1.1","policySections":[{"sectionName":"","policyGroups":[{"fieldName":"Image Component","booleanOperator":"OR","negate":false,"values":[{"value":"rpm|dnf|yum="}]}]}]}
                  - |
                    {"name":"Privileged Container","description":"Alert on deployments with containers running in privileged mode","rationale":"Containers running as privileged represent greater post-exploitation risk by allowing an attacker to access all host devices, run a daemon in the container, etc.","remediation":"Verify that privileged capabilities are required and cannot be provided with a subset of other controls.","disabled":true,"categories":["Privileges","Docker CIS"],"fields":null,"lifecycleStages":["DEPLOY"],"whitelists":[],"exclusions":[{"name":"Don't alert on the stackrox namespace","deployment":{"name":"","scope":{"cluster":"","namespace":"stackrox","label":null}},"image":null,"expiration":null},{"name":"Don't alert on kube-system namespace","deployment":{"name":"","scope":{"cluster":"","namespace":"kube-system","label":null}},"image":null,"expiration":null},{"name":"Don't alert on istio-system namespace","deployment":{"name":"","scope":{"cluster":"","namespace":"istio-system","label":null}},"image":null,"expiration":null},{"name":"Don't alert on openshift-node namespace","deployment":{"name":"","scope":{"cluster":"","namespace":"openshift-node","label":null}},"image":null,"expiration":null},{"name":"Don't alert on openshift-sdn namespace","deployment":{"name":"","scope":{"cluster":"","namespace":"openshift-sdn","label":null}},"image":null,"expiration":null},{"name":"Don't alert on openshift-kube-apiserver namespace","deployment":{"name":"","scope":{"cluster":"","namespace":"openshift-kube-apiserver","label":null}},"image":null,"expiration":null},{"name":"Don't alert on openshift-etcd namespace","deployment":{"name":"","scope":{"cluster":"","namespace":"openshift-etcd","label":null}},"image":null,"expiration":null},{"name":"Don't alert on openshift-apiserver namespace","deployment":{"name":"","scope":{"cluster":"","namespace":"openshift-apiserver","label":null}},"image":null,"expiration":null},{"name":"Don't alert on openshift-dns namespace","deployment":{"name":"","scope":{"cluster":"","namespace":"openshift-dns","label":null}},"image":null,"expiration":null},{"name":"Don't alert on openshift-cluster-node-tuning-operator namespace","deployment":{"name":"","scope":{"cluster":"","namespace":"openshift-cluster-node-tuning-operator","label":null}},"image":null,"expiration":null},{"name":"Don't alert on openshift-cluster-csi-drivers namespace","deployment":{"name":"","scope":{"cluster":"","namespace":"openshift-cluster-csi-drivers","label":null}},"image":null,"expiration":null},{"name":"Don't alert on openshift-machine-config-operator namespace","deployment":{"name":"","scope":{"cluster":"","namespace":"openshift-machine-config-operator","label":null}},"image":null,"expiration":null}],"scope":[],"severity":"MEDIUM_SEVERITY","enforcementActions":[],"notifiers":[],"lastUpdated":"2021-04-12T18:12:01.020289681Z","SORTName":"Privileged Container","SORTLifecycleStage":"DEPLOY","SORTEnforcement":false,"policyVersion":"1.1","policySections":[{"sectionName":"","policyGroups":[{"fieldName":"Privileged Container","booleanOperator":"OR","negate":false,"values":[{"value":"true"}]}]}]}
                  deletePolicyList:
                  - "Required Annotation: Email"
                  - "Shell Spawned by Java Application"
                  - "chkconfig Execution"
                  - "Kubernetes Dashboard Deployed"
                  - "Shell Management"
                  - "Required Annotation: Owner/Team"
                  - "Unauthorized Network Flow"
                  - "Password Binaries"
                  - "Login Binaries"
                  - "Network Management Execution"
                  - "Process Targeting Kubernetes Service Endpoint"
                  - "crontab Execution"
                  - "Shellshock: Multiple CVEs"
                  - "CAP_SYS_ADMIN capability added"
                  - "Linux User Add Execution"
                  - "Emergency Deployment Annotation"
                  - "Remote File Copy Binary Execution"
                  - "Process Targeting Cluster Kubernetes Docker Stats Endpoint"
                  - "Required Label: Owner/Team"
                  - "DockerHub NGINX 1.10"
                  - "Secure Shell Server (sshd) Execution"
                  - "Insecure specified in CMD"
                  - "Netcat Execution Detected"
                  - "Shadow File Modification"
                  - "Kubernetes Actions: Port Forward to Pod"
                  - "Ubuntu Package Manager Execution"
                  - "ADD Command used instead of COPY"
                  - "Process Targeting Cluster Kubelet Endpoint"
                  - "iptables Execution"
                  - "Unauthorized Process Execution"
                  - "Kubernetes Actions: Exec into Pod"
                  - "Apache Struts: CVE-2017-5638"
                  - "SetUID Processes"
                  - "Heartbleed: CVE-2014-0160"
                  - "Linux Group Add Execution"
                  - "Secret Mounted as Environment Variable"
                  - "Mounting Sensitive Host Directories"
                  - "systemd Execution"
                  - "Mount Docker Socket"
                  - "Required Image Label"
                  - "Alpine Linux Package Manager Execution"
                  - "Red Hat Package Manager Execution"
                  - "ACM Privileged Container"
                  - "Cryptocurrency Mining Process Execution"
                  - "Improper Usage of Orchestrator Secrets Volume"
                  - "nmap Execution"
                  - "systemctl Execution"
                  - "Environment Variable Contains Secret"
                  disablePolicyList:
                  - "Alpine Linux Package Manager (apk) in Image"
                  - "Images with no scans"
                  - "Ubuntu Package Manager in Image"
                  - "Red Hat Package Manager in Image"
                  enablePolicyList:
                  - "30-Day Scan Age"
                  - "90-Day Image Age"
                  - "Compiler Tool Execution"
                  - "Container using read-write root filesystem"
                  - "Curl in Image"
                  - "Docker CIS 4.1: Ensure That a User for the Container Has Been Created"
                  - "Docker CIS 4.4: Ensure images are scanned and rebuilt to include security patches"
                  - "Docker CIS 4.7: Alert on Update Instruction"
                  - "Docker CIS 5.1 Ensure that, if applicable, an AppArmor Profile is enabled"
                  - "Docker CIS 5.7: Ensure privileged ports are not mapped within containers"
                  - "Docker CIS 5.9 and 5.20: Ensure that the host's network namespace is not shared"
                  - "Docker CIS 5.19: Ensure mount propagation mode is not enabled"
                  - "Docker CIS 5.15: Ensure that the host's process namespace is not shared"
                  - "Docker CIS 5.16: Ensure that the host's IPC namespace is not shared"
                  - "Docker CIS 5.21: Ensure the default seccomp profile is not disabled"
                  - "Fixable CVSS >= 6 and Privileged"
                  - "Fixable CVSS >= 7"
                  - "Iptables Executed in Privileged Container"
                  - "No resource requests or limits specified"
                  - "Privileged Container"
                  - "Process with UID 0"
                  - "Secure Shell (ssh) Port Exposed"
                  - "Secure Shell (ssh) Port Exposed in Image"
                  - "Wget in Image"
                  - "Latest tag"
---
apiVersion: policy.open-cluster-management.io/v1
kind: PlacementBinding
metadata:
  name: binding-policy-acs-policies
placementRef:
  name: placement-policy-acs-policies
  kind: PlacementRule
  apiGroup: apps.open-cluster-management.io
subjects:
- name: policy-acs-policies
  kind: Policy
  apiGroup: policy.open-cluster-management.io
---
apiVersion: apps.open-cluster-management.io/v1
kind: PlacementRule
metadata:
  name: placement-policy-acs-policies
spec:
  clusterConditions:
  - status: "True"
    type: ManagedClusterConditionAvailable
  clusterSelector:
    matchExpressions:
      - {key: name, operator: In, values: ["local-cluster"]}
